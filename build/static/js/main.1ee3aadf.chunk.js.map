{"version":3,"sources":["components/Sidebar.jsx","components/Tasks.jsx","components/Content.jsx","components/Header.jsx","App.js","index.js"],"names":["Sidebar","selectedtab","setselectedtab","className","onClick","FORMAT","formatDate","date","format","locale","dateFnsFormat","Add_Tasks","onCancel","onAdd","useState","text","settext","setdate","value","onChange","e","target","disabled","onDayChange","day","placeholder","Date","dayPickerProps","modifiers","before","Task_Header_Map","Index","today","next_7","Show_Tasks","tasks","filter","task","isAfter","isBefore","addDays","map","isToday","Tasks","showAddTask","setshowAddTask","settasks","newTask","prevState","length","Content","Header","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1ee3aadf.chunk.js","sourcesContent":["import React from 'react';\r\nimport {FaInbox,FaRegCalendarAlt,FaRegCalendar} from 'react-icons/fa';\r\n\r\nconst Sidebar = ({selectedtab,setselectedtab}) => {\r\n    \r\n    return (\r\n        <div className=\"sidebar\">\r\n            <div className= {selectedtab === \"Index\" ? \"active\" : \"\"} onClick={() => setselectedtab(\"Index\")}>\r\n                <FaInbox className=\"icon\"/>\r\n                Inbox\r\n            </div>\r\n            <div className= {selectedtab === \"today\" ? \"active\" : \"\"} onClick={()=>setselectedtab(\"today\")}>\r\n            <FaRegCalendarAlt className=\"icon\" />\r\n                Today\r\n            </div>\r\n            <div className= {selectedtab === \"next_7\" ? \"active\" : \"\"} onClick={() => setselectedtab(\"next_7\")}>\r\n                <FaRegCalendar className=\"icon\"/>\r\n                Next 7 days\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import React,{useState} from 'react'\r\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\r\nimport \"react-day-picker/lib/style.css\";\r\nimport dateFnsFormat from \"date-fns/format\"\r\nimport isAfter from 'date-fns/isAfter';\r\nimport isBefore from 'date-fns/isBefore';\r\nimport isToday from 'date-fns/isToday';\r\nimport addDays from 'date-fns/addDays';\r\n\r\n\r\nconst FORMAT = \"dd/MM/yyyy\";\r\nfunction formatDate(date, format, locale) {\r\n    return dateFnsFormat(date, format, { locale });\r\n  }\r\n\r\n\r\nconst Add_Tasks = ({onCancel , onAdd}) => {\r\n    \r\n    const [text, settext] = useState(\"\");\r\n    const [date, setdate] = useState(null);    \r\n    return(\r\n\r\n        <div className=\"add-tsk-dial\">\r\n                <input value={text} onChange={(e)=>settext(e.target.value)}/>\r\n            \r\n            <div className=\"add-task-actions-container\">\r\n\r\n                <div>\r\n                    <button className=\"add_tsk\" disabled={!text} onClick={() => {onAdd(text,date);settext(\"\")}}>Add Task</button>\r\n                    <button className=\"cnc\" onClick={() => {onCancel();settext(\"\")}}>Cancel</button>\r\n                </div>\r\n                <div className=\"icon-container\">\r\n                    <DayPickerInput onDayChange={(day) => setdate(day)} placeholder={`${dateFnsFormat(new Date(),FORMAT)}`} \r\n                    formatDate={formatDate}\r\n                    format={FORMAT}\r\n                    \r\n                    dayPickerProps={{\r\n                        modifiers:{\r\n                            disabled:[\r\n                                {before:new Date()}\r\n                            ]\r\n                        }\r\n                    }}/>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            </div>\r\n    )\r\n    \r\n}\r\nlet Task_Header_Map = {\r\n    Index : \"Inbox\",\r\n    today : \"Today\",\r\n    next_7 : \"next 7 days\",\r\n};\r\n\r\nconst Tasks = ({selectedtab}) => {\r\n    \r\n\r\n    const [showAddTask,setshowAddTask] =  useState(false);\r\n\r\n    const [tasks, settasks] = useState([]);\r\n\r\n       \r\n        const addNewTask = (text,date) => {\r\n\r\n            const newTask = {text, date: date || new Date()}\r\n            settasks((prevState) => [...prevState , newTask]);\r\n        }\r\n\r\n        const handleToggle = () => {\r\n\r\n            if(showAddTask){\r\n                setshowAddTask(false);\r\n            }\r\n            else{\r\n                setshowAddTask(true);\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"tasks\">\r\n                <h1>{Task_Header_Map[selectedtab]}</h1>\r\n                <div className=\"add-btn-task\" onClick={handleToggle}>\r\n                <span className=\"plus\">+</span>\r\n                <span className=\"add-task-text\" >Add Tasks</span>\r\n            </div>\r\n            {showAddTask && <Add_Tasks onAdd={addNewTask}  onCancel={()=>setshowAddTask(false)}/>}\r\n            \r\n            {tasks.length > 0 ? <Show_Tasks tasks={tasks} selectedtab={selectedtab}/> : <p>No Tasks Yet!</p>}\r\n            </div>            \r\n        )\r\n    \r\n}\r\n\r\nconst Show_Tasks = ({tasks , selectedtab}) => {\r\n\r\n    if(selectedtab === \"next_7\"){\r\n        return(\r\n            \r\n           tasks.filter((task) => \r\n                        isAfter(task.date,new Date()) &&\r\n                        isBefore(task.date ,addDays(new Date(), 7))\r\n           ).map((task) => (\r\n            <p>{task.text}{\" \"}{dateFnsFormat(new Date(task.date),FORMAT)}</p>\r\n           ))\r\n\r\n        );\r\n    }\r\n    if(selectedtab === \"today\"){\r\n        return(\r\n\r\n            tasks.filter((task) => isToday(task.date)).map((task) => <p>{task.text}{\" \"}{dateFnsFormat(new Date(task.date),FORMAT)}</p>)\r\n        );\r\n    }\r\n\r\n    return(\r\n        tasks.map((task) => <p>{task.text}{\" \"}{dateFnsFormat(new Date(task.date),FORMAT)}</p>)\r\n    );\r\n}\r\n\r\nexport default Tasks\r\n","import React , {useState} from 'react'\r\nimport Sidebar from './Sidebar'\r\nimport Tasks from './Tasks'\r\n\r\n\r\nconst Content = () => {\r\n    \r\n    const [selectedtab,setselectedtab] = useState(\"\");\r\n    \r\n    return (\r\n        <section className=\"content\">\r\n            <Sidebar selectedtab={selectedtab} setselectedtab={setselectedtab}/>\r\n            <Tasks selectedtab={selectedtab}/>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Content\r\n","import React from 'react'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header>\r\n           <nav>\r\n            To do List\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import './App.scss';\n//import Home from 'ToDo_List\\todo-app\\src\\Home.js';\n// import Home from './Home';\nimport Content from './components/Content';\nimport Header from './components/Header';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      \n    <Header />\n    <Content />\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}